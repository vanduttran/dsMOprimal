% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/server_func.R
\name{dscPush}
\alias{dscPush}
\title{Description of a pushed value}
\usage{
dscPush(conns, expr, async = T)
}
\arguments{
\item{conns}{A list of DSConnection-class.}

\item{expr}{An encoded expression to evaluate.}

\item{async}{See DSI::datashield.aggregate options. Default: TRUE.}
}
\value{
Returned value of given expression on opal
}
\description{
Description of a pushed value
}
\details{
#' @title Cross aggregate through two-layer connection
#' @description Cross aggregate through two-layer connection
#' @param conns A list of DSConnection-class.
#' @param conns_remote Name of an opal object on conns.
#' @param expr An encoded expression to evaluate.
#' @param async See DSI::datashield.aggregate options. Default: TRUE.
#' @export
crossAggregate2 <- function(conns, conns_remote, expr, async = T) {
    ## check if conns_remote is found on conns
    stopifnot(all(sapply(datashield.symbols(conns), function(x) {
        conns_remote %in% x
    })))
    DSI::datashield.aggregate(conns, expr=as.call(list(as.symbol("crossAggregate"),
                                                       as.symbol(conns_remote),
                                                       expr,
                                                       async=async)
}
}
